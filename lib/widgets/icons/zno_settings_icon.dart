//Converted from SVG to CustomPainter using https://fluttershapemaker.com/

import 'package:flutter/material.dart';

class ZnoSettingsIcon extends CustomPainter {
  final Color color;
  const ZnoSettingsIcon({this.color = const Color(0xffF4F4F4)});

  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(20, 25);
    path_0.cubicTo(22.7614, 25, 25, 22.7614, 25, 20);
    path_0.cubicTo(25, 17.2386, 22.7614, 15, 20, 15);
    path_0.cubicTo(17.2386, 15, 15, 17.2386, 15, 20);
    path_0.cubicTo(15, 22.7614, 17.2386, 25, 20, 25);
    path_0.close();

    Paint paint0Stroke = Paint()
      ..style = PaintingStyle.stroke
      ..strokeWidth = size.width * 0.07500000;
    paint0Stroke.color = color;
    paint0Stroke.strokeCap = StrokeCap.round;
    paint0Stroke.strokeJoin = StrokeJoin.round;
    canvas.drawPath(path_0, paint0Stroke);

    Path path_1 = Path();
    path_1.moveTo(32.3334, 25);
    path_1.cubicTo(32.1116, 25.5027, 32.0454, 26.0603, 32.1434, 26.6009);
    path_1.cubicTo(32.2414, 27.1416, 32.4992, 27.6405, 32.8834, 28.0333);
    path_1.lineTo(32.9834, 28.1333);
    path_1.cubicTo(33.2933, 28.4429, 33.5392, 28.8105, 33.7069, 29.2152);
    path_1.cubicTo(33.8747, 29.6198, 33.961, 30.0536, 33.961, 30.4916);
    path_1.cubicTo(33.961, 30.9297, 33.8747, 31.3634, 33.7069, 31.7681);
    path_1.cubicTo(33.5392, 32.1728, 33.2933, 32.5404, 32.9834, 32.85);
    path_1.cubicTo(32.6738, 33.1599, 32.3062, 33.4057, 31.9015, 33.5735);
    path_1.cubicTo(31.4969, 33.7412, 31.0631, 33.8276, 30.6251, 33.8276);
    path_1.cubicTo(30.187, 33.8276, 29.7533, 33.7412, 29.3486, 33.5735);
    path_1.cubicTo(28.944, 33.4057, 28.5763, 33.1599, 28.2667, 32.85);
    path_1.lineTo(28.1667, 32.75);
    path_1.cubicTo(27.7739, 32.3657, 27.2751, 32.108, 26.7344, 32.0099);
    path_1.cubicTo(26.1937, 31.9119, 25.6361, 31.9781, 25.1334, 32.2);
    path_1.cubicTo(24.6405, 32.4112, 24.2201, 32.762, 23.9239, 33.2092);
    path_1.cubicTo(23.6278, 33.6563, 23.4689, 34.1803, 23.4667, 34.7166);
    path_1.lineTo(23.4667, 35);
    path_1.cubicTo(23.4667, 35.884, 23.1156, 36.7319, 22.4904, 37.357);
    path_1.cubicTo(21.8653, 37.9821, 21.0175, 38.3333, 20.1334, 38.3333);
    path_1.cubicTo(19.2494, 38.3333, 18.4015, 37.9821, 17.7764, 37.357);
    path_1.cubicTo(17.1513, 36.7319, 16.8001, 35.884, 16.8001, 35);
    path_1.lineTo(16.8001, 34.85);
    path_1.cubicTo(16.7872, 34.2983, 16.6086, 33.7633, 16.2876, 33.3145);
    path_1.cubicTo(15.9666, 32.8656, 15.518, 32.5238, 15.0001, 32.3333);
    path_1.cubicTo(14.4974, 32.1114, 13.9398, 32.0453, 13.3991, 32.1433);
    path_1.cubicTo(12.8584, 32.2413, 12.3595, 32.4991, 11.9667, 32.8833);
    path_1.lineTo(11.8667, 32.9833);
    path_1.cubicTo(11.5572, 33.2932, 11.1895, 33.5391, 10.7849, 33.7068);
    path_1.cubicTo(10.3802, 33.8746, 9.94647, 33.9609, 9.50841, 33.9609);
    path_1.cubicTo(9.07036, 33.9609, 8.63661, 33.8746, 8.23195, 33.7068);
    path_1.cubicTo(7.82729, 33.5391, 7.45966, 33.2932, 7.15008, 32.9833);
    path_1.cubicTo(6.84016, 32.6737, 6.5943, 32.3061, 6.42655, 31.9014);
    path_1.cubicTo(6.2588, 31.4968, 6.17246, 31.063, 6.17246, 30.625);
    path_1.cubicTo(6.17246, 30.1869, 6.2588, 29.7531, 6.42655, 29.3485);
    path_1.cubicTo(6.5943, 28.9438, 6.84016, 28.5762, 7.15008, 28.2666);
    path_1.lineTo(7.25008, 28.1666);
    path_1.cubicTo(7.63431, 27.7738, 7.89206, 27.2749, 7.99009, 26.7343);
    path_1.cubicTo(8.08812, 26.1936, 8.02194, 25.636, 7.80008, 25.1333);
    path_1.cubicTo(7.58881, 24.6403, 7.23801, 24.2199, 6.79086, 23.9238);
    path_1.cubicTo(6.34371, 23.6277, 5.81973, 23.4688, 5.28341, 23.4666);
    path_1.lineTo(5.00008, 23.4666);
    path_1.cubicTo(4.11603, 23.4666, 3.26818, 23.1154, 2.64306, 22.4903);
    path_1.cubicTo(2.01794, 21.8652, 1.66675, 21.0173, 1.66675, 20.1333);
    path_1.cubicTo(1.66675, 19.2492, 2.01794, 18.4014, 2.64306, 17.7763);
    path_1.cubicTo(3.26818, 17.1511, 4.11603, 16.8, 5.00008, 16.8);
    path_1.lineTo(5.15008, 16.8);
    path_1.cubicTo(5.70174, 16.7871, 6.23676, 16.6085, 6.68558, 16.2875);
    path_1.cubicTo(7.1344, 15.9665, 7.47627, 15.5179, 7.66675, 15);
    path_1.cubicTo(7.88861, 14.4973, 7.95479, 13.9396, 7.85675, 13.399);
    path_1.cubicTo(7.75872, 12.8583, 7.50098, 12.3594, 7.11675, 11.9666);
    path_1.lineTo(7.01675, 11.8666);
    path_1.cubicTo(6.70683, 11.557, 6.46096, 11.1894, 6.29322, 10.7848);
    path_1.cubicTo(6.12547, 10.3801, 6.03913, 9.94634, 6.03913, 9.50829);
    path_1.cubicTo(6.03913, 9.07024, 6.12547, 8.63648, 6.29322, 8.23182);
    path_1.cubicTo(6.46096, 7.82716, 6.70683, 7.45954, 7.01675, 7.14996);
    path_1.cubicTo(7.32632, 6.84004, 7.69395, 6.59417, 8.09861, 6.42643);
    path_1.cubicTo(8.50327, 6.25868, 8.93703, 6.17234, 9.37508, 6.17234);
    path_1.cubicTo(9.81313, 6.17234, 10.2469, 6.25868, 10.6515, 6.42643);
    path_1.cubicTo(11.0562, 6.59417, 11.4238, 6.84004, 11.7334, 7.14996);
    path_1.lineTo(11.8334, 7.24996);
    path_1.cubicTo(12.2262, 7.63419, 12.7251, 7.89193, 13.2658, 7.98997);
    path_1.cubicTo(13.8064, 8.088, 14.3641, 8.02182, 14.8667, 7.79996);
    path_1.lineTo(15.0001, 7.79996);
    path_1.cubicTo(15.493, 7.58869, 15.9134, 7.23788, 16.2096, 6.79073);
    path_1.cubicTo(16.5057, 6.34358, 16.6646, 5.8196, 16.6667, 5.28329);
    path_1.lineTo(16.6667, 4.99996);
    path_1.cubicTo(16.6667, 4.1159, 17.0179, 3.26806, 17.6431, 2.64294);
    path_1.cubicTo(18.2682, 2.01782, 19.116, 1.66663, 20.0001, 1.66663);
    path_1.cubicTo(20.8841, 1.66663, 21.732, 2.01782, 22.3571, 2.64294);
    path_1.cubicTo(22.9822, 3.26806, 23.3334, 4.1159, 23.3334, 4.99996);
    path_1.lineTo(23.3334, 5.14996);
    path_1.cubicTo(23.3356, 5.68627, 23.4945, 6.21025, 23.7906, 6.6574);
    path_1.cubicTo(24.0867, 7.10455, 24.5071, 7.45535, 25.0001, 7.66663);
    path_1.cubicTo(25.5028, 7.88848, 26.0604, 7.95466, 26.6011, 7.85663);
    path_1.cubicTo(27.1417, 7.7586, 27.6406, 7.50085, 28.0334, 7.11663);
    path_1.lineTo(28.1334, 7.01663);
    path_1.cubicTo(28.443, 6.7067, 28.8106, 6.46084, 29.2153, 6.29309);
    path_1.cubicTo(29.6199, 6.12535, 30.0537, 6.039, 30.4917, 6.039);
    path_1.cubicTo(30.9298, 6.039, 31.3636, 6.12535, 31.7682, 6.29309);
    path_1.cubicTo(32.1729, 6.46084, 32.5405, 6.7067, 32.8501, 7.01663);
    path_1.cubicTo(33.16, 7.3262, 33.4059, 7.69383, 33.5736, 8.09849);
    path_1.cubicTo(33.7414, 8.50315, 33.8277, 8.93691, 33.8277, 9.37496);
    path_1.cubicTo(33.8277, 9.81301, 33.7414, 10.2468, 33.5736, 10.6514);
    path_1.cubicTo(33.4059, 11.0561, 33.16, 11.4237, 32.8501, 11.7333);
    path_1.lineTo(32.7501, 11.8333);
    path_1.cubicTo(32.3658, 12.2261, 32.1081, 12.725, 32.0101, 13.2656);
    path_1.cubicTo(31.912, 13.8063, 31.9782, 14.3639, 32.2001, 14.8666);
    path_1.lineTo(32.2001, 15);
    path_1.cubicTo(32.4113, 15.4929, 32.7622, 15.9133, 33.2093, 16.2094);
    path_1.cubicTo(33.6565, 16.5056, 34.1804, 16.6645, 34.7167, 16.6666);
    path_1.lineTo(35.0001, 16.6666);
    path_1.cubicTo(35.8841, 16.6666, 36.732, 17.0178, 37.3571, 17.6429);
    path_1.cubicTo(37.9822, 18.2681, 38.3334, 19.1159, 38.3334, 20);
    path_1.cubicTo(38.3334, 20.884, 37.9822, 21.7319, 37.3571, 22.357);
    path_1.cubicTo(36.732, 22.9821, 35.8841, 23.3333, 35.0001, 23.3333);
    path_1.lineTo(34.8501, 23.3333);
    path_1.cubicTo(34.3138, 23.3354, 33.7898, 23.4943, 33.3426, 23.7905);
    path_1.cubicTo(32.8955, 24.0866, 32.5447, 24.507, 32.3334, 25);
    path_1.lineTo(32.3334, 25);
    path_1.close();

    Paint paint1Stroke = Paint()
      ..style = PaintingStyle.stroke
      ..strokeWidth = size.width * 0.07500000;
    paint1Stroke.color = color;
    paint1Stroke.strokeCap = StrokeCap.round;
    paint1Stroke.strokeJoin = StrokeJoin.round;
    canvas.drawPath(path_1, paint1Stroke);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
